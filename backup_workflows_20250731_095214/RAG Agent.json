{
    "createdAt":  "2025-07-28T09:34:04.248Z",
    "updatedAt":  "2025-07-29T10:17:55.000Z",
    "id":  "F1Tgb6URwFAoHWec",
    "name":  "RAG Agent",
    "active":  false,
    "isArchived":  false,
    "nodes":  [
                  {
                      "parameters":  {
                                         "descriptionType":  "manual",
                                         "toolDescription":  "Use this tool to fetch all available documents in the database. ",
                                         "operation":  "select",
                                         "schema":  {
                                                        "__rl":  true,
                                                        "value":  "public",
                                                        "mode":  "list",
                                                        "cachedResultName":  "public"
                                                    },
                                         "table":  {
                                                       "__rl":  true,
                                                       "value":  "document_metadata",
                                                       "mode":  "list",
                                                       "cachedResultName":  "document_metadata"
                                                   },
                                         "returnAll":  "",
                                         "options":  {

                                                     }
                                     },
                      "type":  "n8n-nodes-base.postgresTool",
                      "typeVersion":  2.5,
                      "position":  [
                                       -464,
                                       208
                                   ],
                      "id":  "3639721e-178a-43ec-a5c9-27f8631473e4",
                      "name":  "ListMetadata",
                      "credentials":  {
                                          "postgres":  {
                                                           "id":  "jKKXFtf9HFES3IXY",
                                                           "name":  "Postgres account 2"
                                                       }
                                      }
                  },
                  {
                      "parameters":  {
                                         "toolDescription":  "A tool to call an specialized agent, that can realize queries to the database to look up for information.  ",
                                         "text":  "=The AI Agent query is the following: {{ $fromAI(\u0027query\u0027) }}",
                                         "options":  {
                                                         "systemMessage":  "=You are an AI assistant that helps AI Agents interact with a vector-based document database. \n\nYou have a tool to access said vector store. Your main fucntions are to:\n\n1. Recieve agent queries and traslate them to document-oriented text.\n\n\u003cexamples\u003e\n\n\u003cexample\u003e\nUser: \"Hay un fuego en el almacÃ©n, Â¿quÃ© tengo que hacer?\"\nRephrased Query: \"Procedimiento actuaciÃ³n fuego almacÃ©n\"\n\u003c/example\u003e\n\n\u003cexample\u003e\nUser: \"Me pueden sancionar si no llevo el casco?\"\nRephrased Query: \"Normativa casco y sanciones\"\n\u003c/example\u003e\n\n\u003c/examples\u003e\n\nMake short and concise queries, focusing just in important key words. \n\n2. Call the tool to make the RAG query.\n\n3. Finally, process the response, giving a natural language answer based on the retrieved information. "
                                                     }
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.agentTool",
                      "typeVersion":  2.2,
                      "position":  [
                                       -128,
                                       128
                                   ],
                      "id":  "4e284f64-c4f2-4a32-b8b3-3116942a080a",
                      "name":  "RAGQuery"
                  },
                  {
                      "parameters":  {
                                         "options":  {
                                                         "systemMessage":  "=You are an assistant that helps users interact with a vector-based document database. \n\nYou have access to 3 tools:\n1. ListMetadata: Use this tool to retrieve metadata about documents in the vector database. This includes information like document IDs, titles, sources, tags, or creation dates.\n\n2. RAGQuery: Use this tool when the user asks a question that requires information from the content of documents. This tool performs a semantic search using vector embeddings and generates a natural-language answer based on the retrieved data.\n\n3. QueryRows: Use this tool if a SQL query for tabular data is required. When in need to use this tool, use the ListMetadata tool first to obtain the file_id and schema.\n\n\u003cuse_cases\u003e\n  \u003cListMetadata\u003e \n    \u003cuse_case\u003eThe user wants to browse or explore what documents are available.\u003c/use_case\u003e\n    \u003cuse_case\u003eThe user asks for summaries, sources, document counts, titles, dates, or tags.\u003c/use_case\u003e\n  \u003c/ListMetadata\u003e\n\n  \u003cRAGQuery\u003e \n    \u003cuse_case\u003eThe user asks a specific question that likely requires reading or understanding the contents of the documents.\u003c/use_case\u003e\n    \u003cuse_case\u003eThe user needs procedures, policies, rules, or other internal information.\u003c/use_case\u003e\n    \u003cuse_case\u003eThe user wants a detailed or context-based answer derived from the stored documents.\u003c/use_case\u003e\n  \u003c/RAGQuery\u003e\n\n\u003cQueryRows\u003e\n    \u003cuse_case\u003e The user wants the average, max/min, etc of a column. \u003c/use_case\u003e\n    \u003cuse_case\u003e The user wants to access data from multiple rows. \u003c/use_case\u003e\n\u003c/QueryRows\u003e\n\u003c/use_cases\u003e\n\nBe transparent with the user about where the information comes from (metadata vs. content), and choose the appropriate tool based on their intent. If you\u0027re unsure, first clarify the userâ€™s goal before proceeding.\n\nAnswer in the same language you are spoken to."
                                                     }
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.agent",
                      "typeVersion":  2.1,
                      "position":  [
                                       -592,
                                       -16
                                   ],
                      "id":  "23c28ad5-8ff5-4a27-aed0-a0ff9f3addc6",
                      "name":  "OrquestadorBBDD"
                  },
                  {
                      "parameters":  {
                                         "contextWindowLength":  10
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.memoryPostgresChat",
                      "typeVersion":  1.3,
                      "position":  [
                                       -608,
                                       208
                                   ],
                      "id":  "a9dbffb1-3b6e-4426-9fea-03823b6ee358",
                      "name":  "Postgres Chat Memory",
                      "credentials":  {
                                          "postgres":  {
                                                           "id":  "jKKXFtf9HFES3IXY",
                                                           "name":  "Postgres account 2"
                                                       }
                                      }
                  },
                  {
                      "parameters":  {
                                         "modelName":  "models/gemini-2.5-flash-lite-preview-06-17",
                                         "options":  {

                                                     }
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                      "typeVersion":  1,
                      "position":  [
                                       -144,
                                       288
                                   ],
                      "id":  "a7aba41d-6957-4971-abc0-d7ebc4bb36df",
                      "name":  "Flash-lite",
                      "credentials":  {
                                          "googlePalmApi":  {
                                                                "id":  "VLhNUIMhzGUwsuyU",
                                                                "name":  "Google Gemini(PaLM) Api account"
                                                            }
                                      }
                  },
                  {
                      "parameters":  {
                                         "options":  {

                                                     }
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                      "typeVersion":  1,
                      "position":  [
                                       -736,
                                       208
                                   ],
                      "id":  "ababbb36-ac2f-487a-8aee-e78adb2190c6",
                      "name":  "Flash",
                      "credentials":  {
                                          "googlePalmApi":  {
                                                                "id":  "64FrWQwI7nxTex2J",
                                                                "name":  "Google Gemini(PaLM) Api account personal"
                                                            }
                                      }
                  },
                  {
                      "parameters":  {
                                         "mode":  "retrieve-as-tool",
                                         "toolDescription":  "Use this tool to make RAG queries to look up information in the knowledgebase.",
                                         "tableName":  {
                                                           "__rl":  true,
                                                           "value":  "documents_pg",
                                                           "mode":  "list",
                                                           "cachedResultName":  "documents_pg"
                                                       },
                                         "topK":  6,
                                         "includeDocumentMetadata":  false,
                                         "options":  {
                                                         "queryName":  "match_documents"
                                                     }
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
                      "typeVersion":  1.3,
                      "position":  [
                                       128,
                                       288
                                   ],
                      "id":  "81965f8f-f303-4e63-8d67-776a3b111783",
                      "name":  "Supabase Vector Store",
                      "credentials":  {
                                          "supabaseApi":  {
                                                              "id":  "SUpho4m6LuEL2dEN",
                                                              "name":  "Supabase account 2"
                                                          }
                                      }
                  },
                  {
                      "parameters":  {
                                         "model":  "nomic-embed-text:latest"
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.embeddingsOllama",
                      "typeVersion":  1,
                      "position":  [
                                       112,
                                       448
                                   ],
                      "id":  "340d0b87-1776-4be5-adc6-a1fd6d9e57e7",
                      "name":  "Embeddings Ollama",
                      "credentials":  {
                                          "ollamaApi":  {
                                                            "id":  "Pe0R09Haq28T6YPI",
                                                            "name":  "Ollama account"
                                                        }
                                      }
                  },
                  {
                      "parameters":  {
                                         "options":  {

                                                     }
                                     },
                      "type":  "@n8n/n8n-nodes-langchain.chatTrigger",
                      "typeVersion":  1.1,
                      "position":  [
                                       -832,
                                       -16
                                   ],
                      "id":  "19f16eac-02fe-470b-a651-998b41630a04",
                      "name":  "When chat message received",
                      "webhookId":  "a19e13ec-a36e-43c0-b56e-04d3ae81d163"
                  },
                  {
                      "parameters":  {
                                         "descriptionType":  "manual",
                                         "toolDescription":  "=Run a SQL query - use this to query from the document_rows table once you know the file ID (which is the file path) you are querying. \ndataset_id is the file_id (file path) and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\n\u003cexample_queries\u003e\n\u003cquery\u003e\nSELECT AVG((row_data-\u003e\u003e\u0027revenue\u0027)::numeric)\nFROM document_rows\nWHERE dataset_id = \u0027/data/shared/document.csv\u0027;\n\nExample query 2:\n\nSELECT \n    row_data-\u003e\u003e\u0027category\u0027 as category,\n    SUM((row_data-\u003e\u003e\u0027sales\u0027)::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = \u0027/data/shared/document2.csv\u0027\nGROUP BY row_data-\u003e\u003e\u0027category\u0027;\n\u003c/query\u003e\n\n\u003cquery\u003e\nSELECT \n    row_data-\u003e\u003e\u0027ï»¿product.partNumber\u0027 as product_partNumber, \n    (row_data-\u003e\u003e\u0027value\u0027)::numeric as value \nFROM document_rows \nWHERE dataset_id = \u0027C:\\Users\\javil\\Downloads\\Ejemplos\\Inventory-V2.csv\u0027 \nORDER BY value ASC LIMIT 1\n\u003c/query\u003e\n\u003c/example_queries\u003e",
                                         "operation":  "executeQuery",
                                         "query":  "{{ $fromAI(\u0027sql_query\u0027) }}",
                                         "options":  {

                                                     }
                                     },
                      "type":  "n8n-nodes-base.postgresTool",
                      "typeVersion":  2.5,
                      "position":  [
                                       -320,
                                       208
                                   ],
                      "id":  "ecbd0493-631f-4009-878b-28c810a7b7ef",
                      "name":  "QueryRows",
                      "credentials":  {
                                          "postgres":  {
                                                           "id":  "jKKXFtf9HFES3IXY",
                                                           "name":  "Postgres account 2"
                                                       }
                                      }
                  }
              ],
    "connections":  {
                        "ListMetadata":  {
                                             "ai_tool":  [
                                                             [
                                                                 {
                                                                     "node":  "OrquestadorBBDD",
                                                                     "type":  "ai_tool",
                                                                     "index":  0
                                                                 }
                                                             ]
                                                         ]
                                         },
                        "RAGQuery":  {
                                         "ai_tool":  [
                                                         [
                                                             {
                                                                 "node":  "OrquestadorBBDD",
                                                                 "type":  "ai_tool",
                                                                 "index":  0
                                                             }
                                                         ]
                                                     ]
                                     },
                        "Postgres Chat Memory":  {
                                                     "ai_memory":  [
                                                                       [
                                                                           {
                                                                               "node":  "OrquestadorBBDD",
                                                                               "type":  "ai_memory",
                                                                               "index":  0
                                                                           }
                                                                       ]
                                                                   ]
                                                 },
                        "Flash-lite":  {
                                           "ai_languageModel":  [
                                                                    [
                                                                        {
                                                                            "node":  "RAGQuery",
                                                                            "type":  "ai_languageModel",
                                                                            "index":  0
                                                                        }
                                                                    ]
                                                                ]
                                       },
                        "Flash":  {
                                      "ai_languageModel":  [
                                                               [
                                                                   {
                                                                       "node":  "OrquestadorBBDD",
                                                                       "type":  "ai_languageModel",
                                                                       "index":  0
                                                                   }
                                                               ]
                                                           ]
                                  },
                        "Supabase Vector Store":  {
                                                      "ai_tool":  [
                                                                      [
                                                                          {
                                                                              "node":  "RAGQuery",
                                                                              "type":  "ai_tool",
                                                                              "index":  0
                                                                          }
                                                                      ]
                                                                  ]
                                                  },
                        "Embeddings Ollama":  {
                                                  "ai_embedding":  [
                                                                       [
                                                                           {
                                                                               "node":  "Supabase Vector Store",
                                                                               "type":  "ai_embedding",
                                                                               "index":  0
                                                                           }
                                                                       ]
                                                                   ]
                                              },
                        "When chat message received":  {
                                                           "main":  [
                                                                        [
                                                                            {
                                                                                "node":  "OrquestadorBBDD",
                                                                                "type":  "main",
                                                                                "index":  0
                                                                            }
                                                                        ]
                                                                    ]
                                                       },
                        "QueryRows":  {
                                          "ai_tool":  [
                                                          [
                                                              {
                                                                  "node":  "OrquestadorBBDD",
                                                                  "type":  "ai_tool",
                                                                  "index":  0
                                                              }
                                                          ]
                                                      ]
                                      }
                    },
    "settings":  {
                     "executionOrder":  "v1"
                 },
    "staticData":  null,
    "meta":  null,
    "pinData":  {

                },
    "versionId":  "dce83e51-7f0c-4082-9b5a-22290e62476b",
    "triggerCount":  0,
    "tags":  [

             ]
}
