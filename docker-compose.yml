services:
  
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-n8n}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-n8npass}
      POSTGRES_DB: n8n
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
   
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    depends_on:
      - postgres
      - redis
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      # DB CONFIGURATION
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8npass}
      # DB ENCRYPTION
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

      # LOGIN
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}

      # Webhook
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}

      # TIMEZONE
      - GENERIC_TIMEZONE=${TIMEZONE:-Europe/Madrid}
      - TZ=${TIMEZONE:-Europe/Madrid}
      # Configuraci√≥n adicional
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
      - N8N_METRICS=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_RUNNERS_ENABLED=true

      # QUEUE MODE
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  n8n-worker:
    image: n8nio/n8n:latest
    depends_on:
      - postgres
      - redis
      - n8n 
    environment:
      # DB CONFIGURATION
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8npass}
      # DB ENCRYPTION
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      # QUEUE MODE
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      # ADDITIONAL CONFIGURATION
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_RUNNERS_ENABLED=true
    command: worker


volumes:
  redis_data:
    name: redis_data
  postgres_data:
    name: postgres_data
  n8n_data:
    name: n8n_data
